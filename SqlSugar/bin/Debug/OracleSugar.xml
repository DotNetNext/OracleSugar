<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OracleSugar</name>
    </assembly>
    <members>
        <member name="T:OracleSugar.SequenceModel">
            <summary>
            序列
            </summary>
        </member>
        <member name="P:OracleSugar.SequenceModel.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:OracleSugar.SequenceModel.ColumnName">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:OracleSugar.SequenceModel.Value">
            <summary>
            序列的值
            </summary>
        </member>
        <member name="T:OracleSugar.OracleConfig">
            <summary>
            Oracle参数配置
            </summary>
        </member>
        <member name="F:OracleSugar.OracleConfig.OracleNumberTypeMapping">
            <summary>
            设置Number与实体的类型映射
            默认:
              {1,"bool"},
              {3,"byte"},
              {4,"short"},
              {9,"int"},
              {18,"long"}
            </summary>
        </member>
        <member name="F:OracleSugar.OracleConfig.SequenceMapping">
            <summary>
            设置序列
            </summary>
        </member>
        <member name="T:OracleSugar.PubModel">
            <summary>
            ** 描述：公共参数表
            ** 创始时间：2015-7-20
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="T:OracleSugar.PubModel.DataTableMap">
            <summary>
            用于存储数据表与列的映射信息
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.TABLE_NAME">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.TABLE_ID">
            <summary>
            表ID
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.COLUMN_NAME">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.DATA_TYPE">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.CHARACTER_MAXIMUM_LENGTH">
            <summary>
            字符最大长度
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.COLUMN_DESCRIPTION">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.COLUMN_DEFAULT">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.IS_NULLABLE">
            <summary>
            是否允许为null
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.DataTableMap.IS_PRIMARYKEY">
            <summary>
            是否是主键
            </summary>
        </member>
        <member name="T:OracleSugar.PubModel.SerialNumber">
            <summary>
            流水号设置实体
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.SerialNumber.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.SerialNumber.FieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.SerialNumber.GetNumFunc">
            <summary>
            获取流水号函数
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.SerialNumber.GetNumFuncWithDb">
            <summary>
            获取流水号函数(解决事务中死锁BUG)
            </summary>
        </member>
        <member name="T:OracleSugar.PubModel.Language">
            <summary>
            多语言设置的参数表
            </summary>
        </member>
        <member name="F:OracleSugar.PubModel.Language.ReplaceViewStringKey">
            <summary>
            需要全局替换的字符串Key(用于替换默认语言)
            </summary>
        </member>
        <member name="F:OracleSugar.PubModel.Language.ReplaceViewStringValue">
            <summary>
            需要全局替换的字符串Value(用于替换默认语言)
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.Language.Suffix">
            <summary>
            数据库里面的语言后缀
            </summary>
        </member>
        <member name="P:OracleSugar.PubModel.Language.LanguageValue">
            <summary>
            数据库语言的VALUE
            </summary>
        </member>
        <member name="T:OracleSugar.PubModel.SqlSugarClientConst">
            <summary>
            SqlSugarClient通用常量
            </summary>
        </member>
        <member name="F:OracleSugar.PubModel.SqlSugarClientConst.AttrMappingError">
            <summary>
            属性设置错误信息
            </summary>
        </member>
        <member name="F:OracleSugar.PubModel.SqlSugarClientConst.SqlQuerySqlTemplate">
            <summary>
            SqlQuery查询的SQL模板
            </summary>
        </member>
        <member name="T:OracleSugar.ResolveExpress">
            <summary>
            ** 描述：拉姆达解析类
            ** 创始时间：2015-7-20
            ** 修改时间：2016-9-26
            ** 作者：sunkaixuan
            ** qq：610262374 
            ** 使用说明：使用请注名作者
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpress.FileldErrorMessage">
            <summary>
            字段名解析错误
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpress.ExpToSqlError">
            <summary>
            拉姆达解析错误
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpress.OperatorError">
            <summary>
            运算符错误
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpress.ExpMethodError">
            <summary>
            拉姆达函数错误
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpress.ExpMethodError2">
            <summary>
            拉姆达函数错误2
            </summary>
        </member>
        <member name="M:OracleSugar.ResolveExpress.Equals(System.String,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            是否相等
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.StartsWith(System.String,System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            拉姆达StartsWith函数处理
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <param name="isTure"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.EndWith(System.String,System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            拉姆达EndWith函数处理
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <param name="isTure"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.Contains(System.String,System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            拉姆达Contains函数处理
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <param name="isTure"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.IsNullOrEmpty(System.String,System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            非空验证
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <param name="isTure"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.ParMethodTo(System.String,System.Linq.Expressions.MethodCallExpression,OracleSugar.ResolveExpress.MemberType@)">
            <summary>
            参数函数
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.MethodToString(System.String,System.Linq.Expressions.MethodCallExpression,OracleSugar.ResolveExpress.MemberType@)">
            <summary>
            拉姆达ToString函数处理
            </summary>
            <param name="methodName"></param>
            <param name="mce"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.#ctor(System.Int32)">
            <summary>
            解析拉姆达
            </summary>
            <param name="sameIndex">区分相同参数名的索引号</param>
        </member>
        <member name="M:OracleSugar.ResolveExpress.ResolveExpression(OracleSugar.ResolveExpress,System.Linq.Expressions.Expression,OracleSugar.SqlSugarClient)">
            <summary>
            解析表达式
            </summary>
            <param name="re">当前解析对象</param>
            <param name="exp">要解析的表达式</param>
            <param name="db">数据库访问对象</param>
        </member>
        <member name="M:OracleSugar.ResolveExpress.Init(OracleSugar.ResolveExpress,System.Linq.Expressions.Expression)">
            <summary>
            初始化表达式
            </summary>
            <param name="re"></param>
            <param name="exp"></param>
        </member>
        <member name="M:OracleSugar.ResolveExpress.CreateSqlElements(System.Linq.Expressions.Expression,OracleSugar.ResolveExpress.MemberType@,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            递归解析表达式路由计算
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.SetMemberValueToDynInv(System.Linq.Expressions.Expression@,System.Linq.Expressions.MemberExpression,System.Object@)">
            <summary>
            将解析值赋给dynInv
            </summary>
            <param name="exp"></param>
            <param name="me"></param>
            <param name="dynInv"></param>
        </member>
        <member name="M:OracleSugar.ResolveExpress.AddParas(System.String@,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.AddParasReturnRight(System.Object,System.String@)">
            <summary>
            添加参数并返回右边值
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.GetOperator(System.Linq.Expressions.ExpressionType)">
            <summary>
            根据条件生成对应的sql查询操作符
            </summary>
            <param name="expressiontype"></param>
            <returns></returns>
        </member>
        <member name="F:OracleSugar.ResolveExpress.ConstantBoolDictionary">
            <summary>
            解析bool类型用到的字典
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpress.ExpErrorUniqueKey">
            <summary>
            拉姆达解析唯一标识
            </summary>
        </member>
        <member name="M:OracleSugar.ResolveExpress.GetExpressionRightField(System.Linq.Expressions.Expression,OracleSugar.SqlSugarClient)">
            <summary>
            获取拉姆达表达式的字段值
            </summary>
            <param name="exp"></param>
            <param name="db">数据库访问对象</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ResolveExpress.GetExpressionRightFieldByNT(System.Linq.Expressions.Expression,OracleSugar.SqlSugarClient)">
            <summary>
            获取拉姆达表达式的字段值多个T模式
            </summary>
            <param name="exp"></param>
            <param name="db">数据库访问对象</param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.ResolveExpress.MemberType">
            <summary>
            拉姆达成员类型
            </summary>
        </member>
        <member name="T:OracleSugar.ResolveExpress.ExpressBoolModel">
            <summary>
            用来处理bool类型的实体
            </summary>
        </member>
        <member name="P:OracleSugar.ResolveExpress.ExpressBoolModel.Key">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:OracleSugar.ResolveExpress.ExpressBoolModel.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:OracleSugar.ResolveExpress.ExpressBoolModel.OldValue">
            <summary>
            原始值
            </summary>
        </member>
        <member name="P:OracleSugar.ResolveExpress.ExpressBoolModel.NewValue">
            <summary>
            处事后的值
            </summary>
        </member>
        <member name="P:OracleSugar.ResolveExpress.ExpressBoolModel.ConditionalValue">
            <summary>
            处理后的运算对象
            </summary>
        </member>
        <member name="T:OracleSugar.IDataRecordExtensions">
            <summary>
            ** 描述：IDataRecord扩展类
            ** 创始时间：2016-8-7
            ** 修改时间：-
            ** 作者：孙凯旋
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertBoolean(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取bool
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertByte(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取byte
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertChar(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取char
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertDateTime(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取时间
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertDecimal(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取转换Decimal
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertDouble(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取Double
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertGuid(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取GUID
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertInt16(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取int16
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertInt32(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取int32
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvetInt64(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取int64
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertFloat(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取float
            </summary>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetOtherNull``1(System.Data.IDataReader,System.Int32)">
            <summary>
            获取其它类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetOther``1(System.Data.IDataReader,System.Int32)">
            <summary>
            获取其它类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataRecordExtensions.GetConvertEnum_Nullable``1(System.Data.IDataReader,System.Int32)">
            <summary>
            获取枚举
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dr"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.SqlSugarClient">
            <summary>
            ** 描述：SQL糖 ORM 核心类
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：http://www.cnblogs.com/sunkaixuan/p/4649904.html
            </summary>
        </member>
        <member name="T:OracleSugar.SqlHelper">
            <summary>
            ** 描述：底层SQL辅助函数
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.CommandType">
            <summary>
            如何解释命令字符串 默认为Text 
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.IsEnableLogEvent">
            <summary>
            是否启用日志事件(默认为:false)
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.LogEventStarting">
            <summary>
            执行访数据库前的回调函数  (sql,pars)=>{}
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.LogEventCompleted">
            <summary>
            执行访数据库后的回调函数  (sql,pars)=>{}
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.IsClearParameters">
            <summary>
            是否清空OracleParameters
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.CommandTimeOut">
            <summary>
            设置在终止执行命令的尝试并生成错误之前的等待时间。（单位：秒）
            </summary>
        </member>
        <member name="F:OracleSugar.SqlHelper.IsGetPageParas">
            <summary>
            将页面参数自动填充到OracleParameter []，无需在程序中指定参数
            例如：
                var list = db.Queryable&lt;Student&gt;().Where("id=@id").ToList();
                以前写法
                var list = db.Queryable&lt;Student&gt;().Where("id=@id", new { id=Request["id"] }).ToList();
            </summary>
        </member>
        <member name="M:OracleSugar.SqlHelper.#ctor(System.String)">
            <summary>
            初始化 SqlHelper 类的新实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetConnection">
            <summary>
            获取当前数据库连接对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.BeginTran">
            <summary>
            开始事务
            </summary>
        </member>
        <member name="M:OracleSugar.SqlHelper.BeginTran(System.Data.IsolationLevel)">
            <summary>
            开始事务
            </summary>
            <param name="iso">指定事务行为</param>
        </member>
        <member name="M:OracleSugar.SqlHelper.RollbackTran">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:OracleSugar.SqlHelper.CommitTran">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetString(System.String,System.Object)">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetString(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetInt(System.String,System.Object)">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetInt(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDouble(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDecimal(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDateTime(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetScalar(System.String,System.Object)">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetScalar(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取第一行第一列
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.ExecuteCommand(System.String,System.Object)">
            <summary>
            执行SQL返回受影响行数
            </summary>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.ExecuteCommand(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            执行SQL返回受影响行数
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetReader(System.String,System.Object)">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetReader(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetList``1(System.String,System.Object)">
            <summary>
            根据SQL获取T的集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetList``1(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            根据SQL获取T的集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetSingle``1(System.String,System.Object)">
            <summary>
            根据SQL获取T
            </summary>
            <typeparam name="T">可以是int、string等，也可以是类或者数组、字典</typeparam>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetSingle``1(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            根据SQL获取T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDataTable(System.String,System.Object)">
            <summary>
            获取DataTable
            </summary>
            <param name="sql"></param>
            <param name="pars">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDataTable(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取DataTable
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDataSetAll(System.String,System.Object)">
            <summary>
            获取DataSet
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.GetDataSetAll(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            获取DataSet
            </summary>
            <param name="sql"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlHelper.Dispose">
            <summary>
            释放数据库连接对象
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.#ctor(System.String)">
            <summary>
            初始化 SqlSugarClient 类的新实例
            </summary>
            <param name="connectionString">数据库连接字符串</param>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.BulkNum">
            <summary>
            设置批量操作的数量
            </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.IsEnableAttributeMapping">
            <summary>
            是否启用属性映射
            </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.IsIgnoreErrorColumns">
            <summary>
            忽略非数据库列 （默认为:false）
            </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.SerializerDateFormat">
             <summary>
            设置Queryable或者Sqlable转换成JSON字符串时的日期格式
             </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.PageModel">
            <summary>
            设置分页类型
            </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.Language">
            <summary>
            设置多语言配置
            </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.CurrentFilterKey">
            <summary>
            当前滤器名称
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SetFilterFilterParas(System.Collections.Generic.Dictionary{System.String,System.Func{OracleSugar.KeyValueObj}})">
            <summary>
            设置过滤器（用户权限过滤）
            </summary>
            <param name="filterRows">参数Dictionary string 为过滤器的名称 , Dictionary Func&lt;KeyValueObj&gt; 为过滤函数 (KeyValueObj 中的 Key为Sql条件,Value为Sql参数)</param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SetFilterFilterParas(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            设置过滤器（用户权限过滤）
            </summary>
            <param name="filterColumns">参数Dictionary string 为过滤器的名称 , Dictionary List&lt;string&gt;为允许查询的列的集合</param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SetMappingTables(System.Collections.Generic.List{OracleSugar.KeyValue})">
            <summary>
            设置实体类与表名的映射， Key为实体类 Value为表名
            </summary>
            <param name="mappingTables"></param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.AddMappingTable(OracleSugar.KeyValue)">
            <summary>
            添加实体类与表名的映射， Key为实体类 Value为表名
            </summary>
            <param name="mappingTable"></param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SetMappingColumns(System.Collections.Generic.List{OracleSugar.KeyValue})">
            <summary>
            设置实体字段与数据库字段的映射，Key为实体字段 Value为表字段名称 （注意：不区分表，设置后所有表通用）
            </summary>
            <param name="mappingColumns"></param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.AddMappingColum(OracleSugar.KeyValue)">
            <summary>
            添加实体字段与数据库字段的映射，Key为实体字段 Value为表字段名称 （注意：不区分表，设置后所有表通用）
            </summary>
            <param name="mappingColumns"></param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SetSerialNumber(System.Collections.Generic.List{OracleSugar.PubModel.SerialNumber})">
            <summary>
            设置流水号 
            </summary>
            <param name="serNum">设置流水号所需要的参数集合</param>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Sqlable">
            <summary>
            创建更接近Sql语句的查询对象
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Queryable``1">
            <summary>
            创建拉姆达查询对象
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Queryable``1(System.String)">
            <summary>
            创建拉姆达查询对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tableName">T类型对应的真实表名</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlQuery``1(System.String,System.Object)">
            <summary>
            根据SQL语句将结果集映射到List&lt;T&gt;
            </summary>
            <typeparam name="T">实体对象</typeparam>
            <param name="sql">sql语句</param>
            <param name="whereObj">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns>T的集合</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlQueryDynamic(System.String,System.Object)">
            <summary>
            根据SQL语句将结果集映射到dynamic
            </summary>
            <param name="sql">sql语句</param>
            <param name="whereObj">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns>动态集合</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlQueryJson(System.String,System.Object)">
            <summary>
            根据SQL语句将结果集映射到json
            </summary>
            <param name="sql">sql语句</param>
            <param name="whereObj">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns>JSON数据</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlQuery``1(System.String,Oracle.ManagedDataAccess.Client.OracleParameter[])">
            <summary>
            根据SQL语句将结果集映射到List&lt;T&gt;
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="pars">OracleParameter的集合</param>
            <returns>T的集合</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlQuery``1(System.String,System.Collections.Generic.List{Oracle.ManagedDataAccess.Client.OracleParameter})">
            <summary>
            根据SQL语句将结果集映射到List&lt;T&gt;
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="pars">OracleParameter集合</param>
            <returns>T的集合</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.InsertRange``1(System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">插入对象的集合</param>
            <param name="isIdentity">过期参数无需填写</param>
            <returns>默认返回Identity的集合，如果没有Identity执行成功将返回bool的集合</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Insert``1(``0,System.Boolean)">
            <summary>
            插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity">插入对象</param>
            <param name="isIdentity">过期参数无需填写</param>
            <returns>默认返回Identity，如果没有Identity执行成功将返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlBulkCopy``1(System.Collections.Generic.List{``0})">
            <summary>
            大数据插入
            </summary>
            <param name="entities"></param>
            <returns>全部插入成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Update``1(System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据表达式条件将实体对象更新到数据库
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="rowObj">rowObj为匿名对象时只更新指定列( 例如:new{ name='abc'}只更新name )，为T类型将更新整个实体(排除主键、自增列和禁止更新列)</param>
            <param name="expression">表达式条件</param>
            <returns>更新成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Update``1(``0)">
            <summary>
            将实体对象更新到数据库
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="rowObj">rowObj必需包含主键并且不能为匿名对象</param>
            <returns>更新成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.UpdateRange``1(System.Collections.Generic.List{``0})">
            <summary>
            批量插入(说明：一次更新超过10条以上建议使用SqlBulkReplace)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rowObjList">更新实体的集合，rowObj必需包含主键并且不能为匿名对象</param>
            <returns>执行成功将返回bool的集合</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Update``2(System.Object,``1[])">
            <summary>
            将实体对象更新到数据库
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="FiledType"></typeparam>
            <param name="rowObj">rowObj为匿名对象时只更新指定列( 例如:new{ name='abc'}只更新name )，为T类型将更新整个实体(排除主键、自增列和禁止更新列)</param>
            <param name="whereIn">主键集合</param>
            <returns>更新成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.SqlBulkReplace``1(System.Collections.Generic.List{``0})">
            <summary>
            大数据更新 支持IsIgnoreErrorColumns和isDisableUpdateColumns
            </summary>
            <param name="entities"></param>
            <returns>全部更新成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``1(``0)">
            <summary>
            根据实体删除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="deleteObj"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``1(System.Collections.Generic.List{``0})">
            <summary>
            根据实体集合删除（对性能没有要求可以使用,否则请使用其它重载方法）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="deleteObjList"></param>
            <returns>全部删除成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据表达式删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">表达式条件</param>
            <returns>删除成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``1(System.String,System.Object)">
            <summary>
            根据Where字符串删除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="SqlWhereString">不包含Where的字符串</param>
            <param name="whereObj">匿名参数(例如:new{id=1,name="张三"})</param>
            <returns>删除成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``2(``1[])">
            <summary>
            根据主键集合批量删除数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="FiledType">主键类型</typeparam>
            <param name="whereIn">主键集合</param>
            <returns>删除成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Collections.Generic.List{``1})">
            <summary>
            根据指定列集合批量删除数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="FiledType">指定列的类型</typeparam>
            <param name="expression">表达式条件</param>
            <param name="whereIn">批定列值的集合</param>
            <returns>删除成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.Delete``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``1[])">
            <summary>
            根据指定列集合批量删除数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="FiledType">指定列的类型</typeparam>
            <param name="expression">表达式条件</param>
            <param name="whereIn">批定列值的集合</param>
            <returns>删除成功返回true</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.FalseDelete``2(System.String,``1[])">
            <summary>
            状态删除 
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="FiledType">主键类型</typeparam>
            <param name="field">标识删除的字段</param>
            <param name="whereIn">主键集合</param>
            <returns>将field的值更新为1,则返回true表示状态删除成功</returns>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.FalseDelete``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            状态删除
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="field">标识删除的字段</param>
            <param name="expression">表达式条件</param>
            <returns>将field的值更新为1,则返回true表示状态删除成功</returns>
        </member>
        <member name="F:OracleSugar.SqlSugarClient.ClassGenerating">
            <summary>
            生成实体的对象
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarClient.RemoveAllCache``1">
            <summary>
            清除所有缓存
            </summary>
        </member>
        <member name="P:OracleSugar.SqlSugarClient.ConnectionString">
            <summary>
            当前连接字符串
            </summary>
        </member>
        <member name="P:OracleSugar.SqlSugarClient.IsNoLock">
            <summary>
            查询是否允许脏读（默认为:true）
            </summary>
        </member>
        <member name="P:OracleSugar.SqlSugarClient.DisableUpdateColumns">
            <summary>
            设置禁止更新的列
            </summary>
        </member>
        <member name="P:OracleSugar.SqlSugarClient.DisableInsertColumns">
            <summary>
            设置禁止插入的列
            </summary>
        </member>
        <member name="T:OracleSugar.ClassTemplate">
            <summary>
            生成实体格式模版
            </summary>
        </member>
        <member name="M:OracleSugar.ClassTemplate.Replace(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
            替换模版
             </summary>
             <param name="templateStr"></param>
             <param name="nameSpaceStr"></param>
             <param name="foreachStr"></param>
             <param name="classNameStr"></param>
             <param name="primaryKeyName"></param>
             <returns></returns>
        </member>
        <member name="F:OracleSugar.ClassTemplate.ItemTemplate">
            <summary>
            字段模版
            </summary>
        </member>
        <member name="F:OracleSugar.ClassTemplate.Template">
            <summary>
            生成的实体类模版
            </summary>
        </member>
        <member name="F:OracleSugar.ClassTemplate.ClassFieldSummaryTemplate">
            <summary>
            生成实体类字段摘要模版
            </summary>
        </member>
        <member name="T:OracleSugar.ClassGenerating">
            <summary>
            ** 描述：实体生成类
            ** 创始时间：2015-4-17
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** qq：610262374 欢迎交流,共同提高 ,命名语法等写的不好的地方欢迎大家的给出宝贵建议
            ** 使用说明：http://www.cnblogs.com/sunkaixuan/p/4482152.html
            </summary>
        </member>
        <member name="M:OracleSugar.ClassGenerating.DynamicToClass(System.Object,System.String)">
            <summary>
            根据匿名类获取实体类的字符串
            </summary>
            <param name="entity">匿名对象</param>
            <param name="className">生成的类名</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.DataTableToClass(System.Data.DataTable,System.String,System.String,System.Collections.Generic.List{OracleSugar.PubModel.DataTableMap})">
            <summary>
            根据DataTable获取实体类的字符串
            </summary>
            <param name="dt"></param>
            <param name="className"></param>
            <param name="nameSpace"></param>
            <param name="dataTableMapList"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.SqlToClass(OracleSugar.SqlSugarClient,System.String,System.String)">
            <summary>
            根据SQL语句获取实体类的字符串
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.TableNameToClass(OracleSugar.SqlSugarClient,System.String)">
            <summary>
            根据表名获取实体类的字符串
            </summary>
            <param name="db"></param>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.CreateClassFiles(OracleSugar.SqlSugarClient,System.String,System.String,System.Nullable{System.Boolean},System.Action{System.String},System.Action{System.String})">
            <summary>
            创建实体文件
            </summary>
            <param name="db"></param>
            <param name="fileDirectory"></param>
            <param name="nameSpace">命名空间（默认：system）</param>
            <param name="tableOrView">是生成视图文件还是表文件,null生成表和视图，true生成表，false生成视图(默认为：null)</param>
            <param name="callBack">生成文件后的处理，参数string为实体名</param>
            <param name="preAction">生成文件前的处理，参数string为表名</param>
        </member>
        <member name="M:OracleSugar.ClassGenerating.CreateClassFilesInterface(OracleSugar.SqlSugarClient,System.Nullable{System.Boolean},System.Action{System.Data.DataTable,System.String,System.String})">
            <summary>
            创建SQL实体文件
            </summary>
            <param name="db"></param>
            <param name="tableOrView">是生成视图文件还是表文件,null生成表和视图，true生成表，false生成视图(默认为：null)</param>
            <param name="callBack">回调函数</param>
        </member>
        <member name="M:OracleSugar.ClassGenerating.CreateClassFilesByTableNames(OracleSugar.SqlSugarClient,System.String,System.String,System.String[])">
            <summary>
             创建SQL实体文件,指定表名
            </summary>
        </member>
        <member name="M:OracleSugar.ClassGenerating.GetTableNames(OracleSugar.SqlSugarClient)">
            <summary>
            获取所有数据库表名
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.ChangeType(System.Type)">
            <summary>
            匹配类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.GetTableColumns(OracleSugar.SqlSugarClient,System.String)">
            <summary>
            获取表结构信息
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.ClassGenerating.ForeachTables(OracleSugar.SqlSugarClient,System.Action{System.String})">
             <summary>
            遍历表名和视图名
             </summary>
             <param name="db"></param>
             <param name="action">string为表名</param>
        </member>
        <member name="M:OracleSugar.ClassGenerating.GetTableNameWithSchema(OracleSugar.SqlSugarClient,System.String)">
            <summary>
            获取带schema的表名
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.ResolveSelect">
            <summary>
            ** 描述：解析Queryable.Select函数的参数
            ** 创始时间：2016-9-21
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** qq：610262374 
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.ResolveSelect.GetResult``1(System.String,OracleSugar.Queryable{``0},System.Linq.Expressions.Expression)">
            <summary>
            多表情况
            </summary>
            <typeparam name="TResult">实体类型</typeparam>
            <param name="expStr">拉姆达字符串</param>
            <param name="reval">查旬对象</param>
            <param name="exp"></param>
        </member>
        <member name="M:OracleSugar.ResolveSelect.GetResult``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression)">
            <summary>
            单表情况
            </summary>
            <typeparam name="TResult">实体类型</typeparam>
            <param name="reval">查旬对象</param>
            <param name="exp"></param>
        </member>
        <member name="M:OracleSugar.ResolveSelect.ConvertFuns(System.String,System.Boolean)">
            <summary>
            替换函数
            </summary>
            <param name="selectStr">拉姆达字符串</param>
            <param name="isOneT">true为单表，false为多表</param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.JoinType">
            <summary>
            join类型
            </summary>
        </member>
        <member name="F:OracleSugar.JoinType.INNER">
            <summary>
            等值连接
            </summary>
        </member>
        <member name="F:OracleSugar.JoinType.LEFT">
            <summary>
            左外连
            </summary>
        </member>
        <member name="F:OracleSugar.JoinType.RIGHT">
            <summary>
            右外连
            </summary>
        </member>
        <member name="T:OracleSugar.ApplyType">
            <summary>
            Apply类型
            </summary>
        </member>
        <member name="F:OracleSugar.ApplyType.CORSS">
            <summary>
            笛卡尔积
            </summary>
        </member>
        <member name="F:OracleSugar.ApplyType.OUTRE">
            <summary>
            外连
            </summary>
        </member>
        <member name="T:OracleSugar.OrderByType">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="F:OracleSugar.OrderByType.asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:OracleSugar.OrderByType.desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:OracleSugar.PageModel">
            <summary>
            分页类型
            </summary>
        </member>
        <member name="F:OracleSugar.PageModel.RowNumber">
            <summary>
            05分页
            </summary>
        </member>
        <member name="F:OracleSugar.PageModel.Offset">
            <summary>
            12分页
            </summary>
        </member>
        <member name="T:OracleSugar.ResolveExpressType">
            <summary>
            解析类型
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpressType.oneT">
            <summary>
            单个T
            </summary>
        </member>
        <member name="F:OracleSugar.ResolveExpressType.nT">
            <summary>
            多个T
            </summary>
        </member>
        <member name="T:OracleSugar.IDataReaderEntityBuilder`1">
            <summary>
            ** 描述：DataReader实体生成
            ** 创始时间：2016-8-7
            ** 修改时间：-
            ** 作者：孙凯旋
            ** 使用说明：
            </summary>
        </member>
        <member name="F:OracleSugar.IDataReaderEntityBuilder`1.handler">
            <summary>
            声名事件，当执行CreateBuilder后，EMIT将动态创建最高性能的实体绑定对象
            </summary>
        </member>
        <member name="M:OracleSugar.IDataReaderEntityBuilder`1.Build(System.Data.IDataRecord)">
            <summary>
            将dataRecord的值绑定到T
            </summary>
            <param name="dataRecord"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataReaderEntityBuilder`1.CreateBuilder(System.Type,System.Data.IDataRecord)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="dataRecord"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IDataReaderEntityBuilder`1.GeneratorCallMethod(System.Reflection.Emit.ILGenerator,System.Type,System.Boolean,System.Reflection.PropertyInfo,System.String,System.String)">
            <summary>
            动态获取IDataRecord里面的函数
            </summary>
            <param name="generator"></param>
            <param name="type"></param>
            <param name="isNullable"></param>
            <param name="pro"></param>
            <param name="dbTypeName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="T:OracleSugar.IDataReaderEntityBuilder`1.Load">
            <summary>
            声名委托类型
            </summary>
            <param name="dataRecord"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.KeyValue">
            <summary>
            自定义键值类 key is string, value is string
            </summary>
        </member>
        <member name="P:OracleSugar.KeyValue.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:OracleSugar.KeyValue.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:OracleSugar.KeyValueObj">
            <summary>
            自定义键值类 key is string, value is object
            </summary>
        </member>
        <member name="P:OracleSugar.KeyValueObj.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:OracleSugar.KeyValueObj.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:OracleSugar.SugarMappingAttribute">
            <summary>
            表名属性
            </summary>
        </member>
        <member name="P:OracleSugar.SugarMappingAttribute.TableName">
            <summary>
            据库对应的表名
            </summary>
        </member>
        <member name="P:OracleSugar.SugarMappingAttribute.ColumnName">
            <summary>
            数据库对应的列名
            </summary>
        </member>
        <member name="M:OracleSugar.ReflectionSugarMapping.GetMappingInfo``1">
            <summary>
            通过反射取自定义属性
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OracleSugar.QueryableExtensions">
            <summary>
            ** 描述：Queryable扩展函数
            ** 创始时间：2015-7-13
            ** 修改时间：2016-9-19
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Where``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Where``1(OracleSugar.Queryable{``0},System.String,System.Object)">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="whereString">Where后面的Sql条件语句 (例如： id=@id )</param>
            <param name="whereObj"> 匿名参数 (例如：new{id=1,name="张三"})</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Where``2(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="T2">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Where``3(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="T2">表实体类型</typeparam>
            <typeparam name="T3">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Where``4(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="T2">表实体类型</typeparam>
            <typeparam name="T3">表实体类型</typeparam>
            <typeparam name="T4">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Where``5(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="T2">表实体类型</typeparam>
            <typeparam name="T3">表实体类型</typeparam>
            <typeparam name="T4">表实体类型</typeparam>
            <typeparam name="T5">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.In``1(OracleSugar.Queryable{``0},System.Object[])">
            <summary>
            根据主键查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="pkValues">主键集合</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.InSingle``1(OracleSugar.Queryable{``0},System.Object)">
            <summary>
            根据主键查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="pkValue">主键</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.In``2(OracleSugar.Queryable{``0},System.String,``1[])">
            <summary>
            条件筛选 ( 例如：InFieldName 为 id, inValues 值为 new string[]{"1" ,"2"} 生成的SQL就是 id in('1','2')  )
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="FieldType">In的字段类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="InFieldName">In的字段名称</param>
            <param name="inValues">In的值的数组集合</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.In``2(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``1[])">
            <summary>
             条件筛选 ( 例如：expression 为 it=>it.id,  inValues值为 new string[]{"1" ,"2"} 生成的SQL就是  id in('1','2') )
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="FieldType">In的字段类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">In的字段（例如：it=>it.id）</param>
            <param name="inValues">In的值的数组集合</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.In``2(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Collections.Generic.List{``1})">
            <summary>
             条件筛选 ( 例如：expression 为 it=>it.id,  inValues值为 new string[]{"1" ,"2"} 生成的SQL就是  id in('1','2') )
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="FieldType">In的字段类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">In的字段（例如：it=>it.id）</param>
            <param name="inValues">In的值的集合</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.In``2(OracleSugar.Queryable{``0},System.String,System.Collections.Generic.List{``1})">
            <summary>
            条件筛选 ( 例如：InFieldName 为 id,  inValues值为 new string[]{"1" ,"2"} 生成的SQL就是  id in('1','2') )
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="FieldType">In的字段类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="InFieldName">In的字段名称</param>
            <param name="inValues">In的值的集合</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.OrderBy``1(OracleSugar.Queryable{``0},System.String)">
            <summary>
            排序
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="orderFileds">排序字符串（例如：id asc,name desc) </param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.OrderBy``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">排序字段 it=>it.fieldName </param>
            <param name="type">排序类型</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.OrderBy``2(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,System.Object}},OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <typeparam name="T2">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">例如 (s1,s2)=>s1.id,相当于 order by s1.id</param>
            <param name="type">排序类型</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.GroupBy``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            分组
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">分组字段 (例如：it=>it.fieldName)</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.GroupBy``1(OracleSugar.Queryable{``0},System.String)">
            <summary>
            分组
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="groupFileds">分组字段 (例如：id,name) </param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Skip``1(OracleSugar.Queryable{``0},System.Int32)">
            <summary>
             跳过序列中指定数量的元素，然后返回剩余的元素。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="index">指定数量的索引</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Take``1(OracleSugar.Queryable{``0},System.Int32)">
            <summary>
            从起始点向后取指定条数的数据
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="num">指定条数</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Single``1(OracleSugar.Queryable{``0})">
            <summary>
             返回序列的唯一元素；如果该序列并非恰好包含一个元素，则会引发异常。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.SingleOrDefault``1(OracleSugar.Queryable{``0})">
            <summary>
             返回序列的唯一元素；如果该序列为空返回Default(T),序列超过1条返则抛出异常。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Single``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             返回序列的唯一元素；如果该序列并非恰好包含一个元素，则会引发异常。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.SingleOrDefault``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             返回序列的唯一元素；如果该序列并非恰好包含一个元素，否则返回null。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.First``1(OracleSugar.Queryable{``0})">
            <summary>
             返回序列中的第一个元素。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.FirstOrDefault``1(OracleSugar.Queryable{``0})">
            <summary>
              返回序列中的第一个元素,如果序列为NULL返回default(T)
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.First``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            返回序列中的第一个元素。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.FirstOrDefault``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            返回序列中的第一个元素,如果序列为NULL返回default(T)
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>T</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Any``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             确定序列是否包含任何元素。
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">表达式条件</param>
            <returns>count>0返回true</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Any``1(OracleSugar.Queryable{``0})">
            <summary>
             确定序列是否包含任何元素
            </summary>
            <typeparam name="T">表实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>count>0返回true</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``3(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T">原数据实体类型</typeparam>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">给新实体赋值的表达式</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``4(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T">原数据实体类型</typeparam>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="T3">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">给新实体赋值的表达式</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``5(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T">原数据实体类型</typeparam>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="T3">原数据实体类型</typeparam>
            <typeparam name="T4">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">给新实体赋值的表达式</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``6(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T">原数据实体类型</typeparam>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="T3">原数据实体类型</typeparam>
            <typeparam name="T4">原数据实体类型</typeparam>
            <typeparam name="T5">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">给新实体赋值的表达式</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``2(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="TSource">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">给新实体赋值的表达式</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``2(OracleSugar.Queryable{``0},System.String)">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="TSource">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="select">查询字符串（例如 id,name）</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``1(OracleSugar.Queryable{``0},System.String)">
            <summary>
            将select的字段映射到T对象
            </summary>
            <typeparam name="T">数据实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="select">查询字符串（例如 id,name）</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Select``2(OracleSugar.Queryable{``1},System.String)">
            <summary>
            将select的字段映射到T对象
            </summary>
            <typeparam name="T">数据实体类型</typeparam>
            <typeparam name="Result">数据实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="select">查询字符串（例如 id,name）</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Count``1(OracleSugar.Queryable{``0})">
            <summary>
            获取序列总记录数
            </summary>
            <param name="queryable">查询对象</param>
            <returns>int</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Max``2(OracleSugar.Queryable{``0},System.String)">
            <summary>
            获取最大值
            </summary>
            <typeparam name="TSource">实体类型</typeparam>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="maxField">列名</param>
            <returns>TResult</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Max``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取最大值
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">查询字段 (例如：it=>it.fieldName)</param>
            <returns>object</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Min``2(OracleSugar.Queryable{``0},System.String)">
            <summary>
            获取最小值
            </summary>
            <typeparam name="TSource">实体类型</typeparam>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="minField">列名</param>
            <returns>TResult</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.Min``1(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取最小值
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">查询字段 (例如：it=>it.fieldName)</param>
            <returns>object</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.ToList``1(OracleSugar.Queryable{``0})">
            <summary>
            将Queryable转换T的集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>T的集合</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.ToJson``1(OracleSugar.Queryable{``0})">
            <summary>
            将Queryable转换为Json
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>json字符串</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.ToSql``1(OracleSugar.Queryable{``0})">
            <summary>
            返回Sql和参数信息
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.ToDynamic``1(OracleSugar.Queryable{``0})">
            <summary>
            将Queryable转换为Dynamic
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>dynamic</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.ToDataTable``1(OracleSugar.Queryable{``0})">
            <summary>
            将Queryable转换为DataTable
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.ToPageList``1(OracleSugar.Queryable{``0},System.Int32,System.Int32)">
            <summary>
            将Queryable转换为分页后的List&lt;T&gt;集合
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="queryable">查询对象</param>
            <param name="pageIndex">当前页码</param>
            <param name="pageSize">每页显示数量</param>
            <returns>T的集合</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.JoinTable``2(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,System.Object}},OracleSugar.JoinType)">
            <summary>
            联表查询
            </summary>
            <typeparam name="T">第一个表的对象</typeparam>
            <typeparam name="T2">联接的表对象</typeparam>
            <param name="queryable"></param>
            <param name="expression">表达式</param>
            <param name="type">Join的类型</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.JoinTable``3(OracleSugar.Queryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Object}},OracleSugar.JoinType)">
            <summary>
            联表查询
            </summary>
            <typeparam name="T">第一个表的对象</typeparam>
            <typeparam name="T2">联接表的对象</typeparam>
            <typeparam name="T3">联接表的对象</typeparam>
            <param name="queryable">查询对象</param>
            <param name="expression">条件表达式</param>
            <param name="type">Join的类型</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:OracleSugar.QueryableExtensions.JoinTable``1(OracleSugar.Queryable{``0},System.String,System.String,System.String,System.Object,OracleSugar.JoinType)">
            <summary>
            联表查询根据字符串
            </summary>
            <typeparam name="T">第一个表的对象</typeparam>
            <param name="queryable">查询对象</param>
            <param name="tableName">表名（可是以表或也可以是SQL语句加括号）</param>
            <param name="shortName">表名简写</param>
            <param name="onWhere">on后面的条件</param>
            <param name="whereObj">匿名参数(例如:new{id=1,name="张三"})</param>
            <param name="type">Join的类型</param>
            <returns>Queryable</returns>
        </member>
        <member name="T:OracleSugar.Queryable`1">
            <summary>
            ** 描述：Queryable拉姆达查询对象
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="F:OracleSugar.Queryable`1.DB">
            <summary>
            数据接口
            </summary>
        </member>
        <member name="F:OracleSugar.Queryable`1.WhereValue">
            <summary>
            Where临时数据
            </summary>
        </member>
        <member name="F:OracleSugar.Queryable`1.Params">
            <summary>
            OracleParameter临时数据
            </summary>
        </member>
        <member name="F:OracleSugar.Queryable`1.WhereIndex">
            <summary>
            条件索引临时数据
            </summary>
        </member>
        <member name="F:OracleSugar.Queryable`1.JoinTableValue">
            <summary>
            联表查询临时数据
            </summary>
        </member>
        <member name="M:OracleSugar.Queryable`1.JoinTable``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}},OracleSugar.JoinType)">
            <summary>
            联表查询
            </summary>
            <typeparam name="T2">联接的表对象</typeparam>
            <param name="expression">表达式</param>
            <param name="type">Join的类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.JoinTable``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Object}},OracleSugar.JoinType)">
            <summary>
            联表查询
            </summary>
            <typeparam name="T2">联接表的对象</typeparam>
            <typeparam name="T3">联接表的对象</typeparam>
            <param name="expression">表达式</param>
            <param name="type">Join的类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Where``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T2">表实体类型</typeparam>
            <param name="expression">表达式条件</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Where``1(System.String,System.Object)">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T2">表实体类型</typeparam>
            <param name="whereString">Where后面的Sql条件语句 (例如： id=@id )</param>
            <param name="whereObj">匿名参数 (例如：new{id=1,name="张三"})</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Where``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T2">表实体类型</typeparam>
            <typeparam name="T3">表实体类型</typeparam>
            <param name="expression">表达式条件</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Where``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T2">表实体类型</typeparam>
            <typeparam name="T3">表实体类型</typeparam>
            <typeparam name="T4">表实体类型</typeparam>
            <param name="expression">表达式条件</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Where``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Boolean}})">
            <summary>
            条件筛选
            </summary>
            <typeparam name="T2">表实体类型</typeparam>
            <typeparam name="T3">表实体类型</typeparam>
            <typeparam name="T4">表实体类型</typeparam>
            <typeparam name="T5">表实体类型</typeparam>
            <param name="expression">表达式条件</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}},OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T2">表实体类型</typeparam>
            <param name="expression">例如 (s1,s2)=>s1.id,相当于 order by s1.id</param>
            <param name="type">排序类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Max``1(System.String)">
            <summary>
            获取最大值
            </summary>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="maxField">列名</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Min``1(System.String)">
            <summary>
            获取最小值
            </summary>
            <typeparam name="TResult">返回类型</typeparam>
            <param name="minField">列名</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Select``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="expression">给新实体赋值的表达式</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Select``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="T3">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="expression">给新实体赋值的表达式</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Select``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="T3">原数据实体类型</typeparam>
            <typeparam name="T4">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="expression">给新实体赋值的表达式</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Select``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T2">原数据实体类型</typeparam>
            <typeparam name="T3">原数据实体类型</typeparam>
            <typeparam name="T4">原数据实体类型</typeparam>
            <typeparam name="T5">原数据实体类型</typeparam>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="expression">给新实体赋值的表达式</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="TResult">返回值的新实体类型</typeparam>
            <param name="expression">给新实体赋值的表达式</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.Queryable`1.Select``1(System.String)">
            <summary>
            将源数据对象转换到新对象中
            </summary>
            <typeparam name="T2">返回值的新实体类型</typeparam>
            <param name="select">查询字符串（例如 id,name）</param>
            <returns></returns>
        </member>
        <member name="P:OracleSugar.Queryable`1.TName">
            <summary>
            T的名称
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.Type">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.Skip">
            <summary>
            Skip临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.Take">
            <summary>
            Take临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.OrderByValue">
            <summary>
            Order临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.SelectValue">
            <summary>
            Select临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.TableName">
            <summary>
            表名临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Queryable`1.GroupByValue">
            <summary>
            分组查询临时数据
            </summary>
        </member>
        <member name="T:OracleSugar.Sqlable">
            <summary>
            ** 描述：Queryable是多表查询基类，基于拥有大量查询扩展函数
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="F:OracleSugar.Sqlable.DB">
            <summary>
            数据接口
            </summary>
        </member>
        <member name="F:OracleSugar.Sqlable.Where">
            <summary>
            Where临时数据
            </summary>
        </member>
        <member name="F:OracleSugar.Sqlable.Params">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:OracleSugar.Sqlable.Sql">
            <summary>
            sql临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Sqlable.OrderBy">
            <summary>
            OrderBy临时数据
            </summary>
        </member>
        <member name="P:OracleSugar.Sqlable.GroupBy">
            <summary>
            GroupBy临时数据
            </summary>
        </member>
        <member name="T:OracleSugar.SqlableExtensions">
            <summary>
            ** 描述：Sqlable扩展函数
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.From(OracleSugar.Sqlable,System.String,System.String)">
            <summary>
            Form
            </summary>
            <param name="sqlable"></param>
            <param name="tableName">表名</param>
            <param name="shortName">表名简写</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.From``1(OracleSugar.Sqlable,System.String)">
            <summary>
            Form
            </summary>
            <param name="sqlable"></param>
            <param name="shortName">表名简写</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.Join(OracleSugar.Sqlable,System.String,System.String,System.String,System.String,OracleSugar.JoinType)">
            <summary>
            Join
            </summary>
            <param name="sqlable"></param>
            <param name="tableName">表名字符串</param>
            <param name="shortName">表名简写</param>
            <param name="leftFiled">join左边连接字段</param>
            <param name="RightFiled">join右边连接字段</param>
            <param name="type">join类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.Join``1(OracleSugar.Sqlable,System.String,System.String,System.String,OracleSugar.JoinType)">
            <summary>
            Join
            </summary>
            <param name="sqlable"></param>
            <param name="shortName">表名简写</param>
            <param name="leftFiled">join左边连接字段</param>
            <param name="RightFiled">join右边连接字段</param>
            <param name="type">join类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.Where(OracleSugar.Sqlable,System.String)">
            <summary>
            Where
            </summary>
            <param name="sqlable"></param>
            <param name="where">查询条件、开头无需写 AND或者WHERE</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.OrderBy(OracleSugar.Sqlable,System.String)">
            <summary>
            OrderBy
            </summary>
            <param name="sqlable"></param>
            <param name="orderBy">排序字段，可以多个</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.Apply(OracleSugar.Sqlable,System.String,System.String,OracleSugar.ApplyType)">
            <summary>
            Apply
            </summary>
            <param name="sqlable"></param>
            <param name="applySql">apply主体内容</param>
            <param name="shotName">apply简写</param>
            <param name="type">Apply类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.GroupBy(OracleSugar.Sqlable,System.String)">
            <summary>
            GroupBy
            </summary>
            <param name="sqlable"></param>
            <param name="groupBy">GroupBy字段，可以多个</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToList``1(OracleSugar.Sqlable,System.String,System.Object,System.String,System.String)">
            <summary>
            设置查询列执行查询，并且将结果集转成List《T》
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <param name="preSql">在这语句之前可插入自定义SQL</param>
            <param name="nextSql">在这语句之后可以插自定义SQL</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.GetAllParas(OracleSugar.Sqlable,System.Object)">
            <summary>
            获取页面参数
            </summary>
            <param name="sqlable"></param>
            <param name="whereObj"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToDataTable(OracleSugar.Sqlable,System.String,System.Object)">
            <summary>
            设置查询列执行查询，并且将结果集转成DataTable
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToJson(OracleSugar.Sqlable,System.String,System.Object)">
            <summary>
            设置查询列执行查询，并且将结果集转成json
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToDynamic(OracleSugar.Sqlable,System.String,System.Object)">
            <summary>
            设置查询列执行查询，并且将结果集转成dynamic
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.ToClass(OracleSugar.Sqlable,System.String,System.Object)">
            <summary>
            生成查询结果对应的实体类字符串
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.Count(OracleSugar.Sqlable,System.Object,System.String,System.String)">
            <summary>
            反回记录数
            </summary>
            <param name="sqlable"></param>
            <param name="whereObj">匿名参数 (例如：new{id=1,name="张三"})</param>
            <param name="preSql">在这语句之前可插入自定义SQL</param>
            <param name="nextSql">在这语句之后可以插自定义SQL</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToPageList``1(OracleSugar.Sqlable,System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            设置查询列和分页参数执行查询，并且将结果集转成List《T》
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="orderByFiled">Order By字段，可以多个</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页显示数量</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToPageTable(OracleSugar.Sqlable,System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            设置查询列和分页参数执行查询，并且将结果集转成DataTable
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="orderByFiled">Order By字段，可以多个</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页显示数量</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToPageJson(OracleSugar.Sqlable,System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            设置查询列和分页参数执行查询，并且将结果集转成json
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="orderByFiled">Order By字段，可以多个</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页显示数量</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlableExtensions.SelectToPageDynamic(OracleSugar.Sqlable,System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            设置查询列和分页参数执行查询，并且将结果集转成dynamic
            </summary>
            <param name="sqlable"></param>
            <param name="fileds">查询列</param>
            <param name="orderByFiled">Order By字段，可以多个</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页显示数量</param>
            <param name="whereObj">SQL参数,例如:new{id=1,name="张三"}</param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.SqlSugarTool">
            <summary>
            ** 描述：SqlSugar工具类
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
            <summary>
            SqlSugarTool局部类与Core有差异的部分(方便工具移植到.NetCore版本)
            </summary>
            <summary>
            SqlSugarTool局部类存放具有拼接SQL的函数(方便工具移植到其它数据库版本)
            </summary>
        </member>
        <member name="F:OracleSugar.SqlSugarTool.ParSymbol">
            <summary>
            par的符号
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.DataReaderToList``1(System.Type,System.Data.IDataReader,System.String,System.Boolean,System.Boolean)">
            <summary>
             Reader转成T的集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <param name="dr"></param>
            <param name="fields"></param>
            <param name="isClose"></param>
            <param name="isTry"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.SetParSize(Oracle.ManagedDataAccess.Client.OracleParameter)">
            <summary>
            设置参数Size
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetParameters(System.Object,System.Reflection.PropertyInfo[])">
            <summary>
            将实体对象转换成OracleParameter[] 
            </summary>
            <param name="obj"></param>
            <param name="pis"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetObjectToDictionary(System.Object)">
            <summary>
            将实体对象转换成 Dictionary《string, string》
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetGetPropertiesByCache(System.Type,System.String,OracleSugar.CacheManager{System.Reflection.PropertyInfo[]})">
            <summary>
            获取type属性cache
            </summary>
            <param name="type"></param>
            <param name="cachePropertiesKey"></param>
            <param name="cachePropertiesManager"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.IsPrimaryKey(OracleSugar.SqlSugarClient,System.String)">
            <summary>
            判段是否包含主键
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.SqlLikeWordEncode(System.String)">
            <summary>
            处理like条件的通配符
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetPropertyValue(System.Object,System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="obj"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="F:OracleSugar.SqlSugarTool.SpecialRequestForm">
            <summary>
            使用页面自动填充OracleParameter时 Request.Form出现特殊字符时可以重写Request.Form方法，使用时注意加锁并且用到将该值设为null
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetUnderType(System.Reflection.PropertyInfo,System.Boolean@)">
            <summary>
            获取最底层类型
            </summary>
            <param name="propertyInfo"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetParameterDictionary(System.Boolean)">
            <summary>
            获取参数到键值集合根据页面Request参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetParameterArray(System.Boolean)">
            <summary>
            获取参数到键值集合根据页面Request参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.PackagingSQL(System.String)">
            <summary>
            将参数sql转成 '('+sql+')'
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetLockString(System.Boolean)">
            <summary>
            获取 WITH(NOLOCK)
            </summary>
            <param name="isNoLock"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetPrimaryKeyByTableName(OracleSugar.SqlSugarClient,System.String)">
            <summary>
            根据表获取主键
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetIdentitiesKeyByTableName(OracleSugar.SqlSugarClient,System.String)">
             <summary>
            根据表名获取自添列 keyTableName Value columnName
             </summary>
             <param name="db"></param>
             <param name="tableName"></param>
             <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetColumnsByTableName(OracleSugar.SqlSugarClient,System.String)">
            <summary>
            根据表名获取列名
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetCreateClassSql(System.Nullable{System.Boolean})">
             <summary>
            tableOrView  null=u,v , true=u , false=v
             </summary>
             <param name="tableOrView"></param>
             <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.ChangeDBTypeToCSharpType(System.String)">
            <summary>
            将SqlType转成C#Type
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetTranslationSqlName(System.String)">
            <summary>
            获取转释后的表名和列名
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetOracleParameterName(System.String)">
            <summary>
            获取参数名
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetOracleParameterNameNoParSymbol(System.String)">
             <summary>
            获取没有符号的参数名称
             </summary>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarTool.GetSchemaList(OracleSugar.SqlSugarClient)">
            <summary>
            获取Schema和表名的集合
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.JsonConverter">
            <summary>
            ** 描述：Json转换类
            ** 创始时间：2010-2-28
            ** 修改时间：-
            ** 作者：热心的dakang
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.JsonConverter.DataTableToJson(System.Data.DataTable)">
            <summary>
            dataTable转成JSON
            add sunkaixuan 
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.JsonConverter.DataTableToJson(System.Data.DataTable,System.String)">
            <summary>
            dataTable转成JSON
             add sunkaixuan 
            </summary>
            <param name="table"></param>
            <param name="dateFormat">设置序列化的时间格式</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.JsonConverter.JsonClass(System.Object)">
            <summary>
            自定义查询对象转换动态类
            add dukang by 2016-05-19
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.JsonConverter.Serialize(System.Object,System.Boolean)">
            <summary>
            object动态类转换json包
            add dukang by 2016-05-19
            </summary>
            <param name="obj">对象</param>
            <param name="DateConvert">时间戳是否转换成日期类型</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.JsonConverter.ConvertJson(System.String)">
            <summary>
            json转换object动态类
            add duk by 2016-05-19
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.JsonConverter.ToJson(System.Data.IDataReader)">
            <summary>   
            DataReader转换为Json   
            </summary>   
            <param name="dataReader">DataReader对象</param>   
            <returns>Json字符串</returns>   
        </member>
        <member name="M:OracleSugar.JsonConverter.ToJson(System.Data.DataSet)">
            <summary>   
            DataSet转换为Json   
            add dukang by 2016-05-19
            </summary>   
            <param name="dataSet">DataSet对象</param>   
            <returns>Json字符串</returns>   
        </member>
        <member name="M:OracleSugar.JsonConverter.ToJson(System.Data.DataTable,System.String)">
            <summary>  
            DataTable转成Json   
            add dukang by 2016-05-19
            </summary>  
            <param name="jsonName"></param>  
            <param name="dt"></param>  
            <returns></returns>  
        </member>
        <member name="M:OracleSugar.JsonConverter.ToJson(System.Data.DataTable)">
            <summary>   
            Datatable转换为Json   
            add dukang by 2016-05-19
            </summary>   
            <param name="dt">Datatable对象</param>   
            <returns>Json字符串</returns>   
        </member>
        <member name="M:OracleSugar.JsonConverter.StringFormat(System.String,System.Type)">
            <summary>  
            格式化字符型、日期型、布尔型  
            add dukang by 2016-05-19
            </summary>  
            <param name="str"></param>  
            <param name="type"></param>  
            <returns></returns>  
        </member>
        <member name="M:OracleSugar.JsonConverter.String2Json(System.String)">
            <summary>  
            过滤特殊字符  
            add dukang by 2016-05-19
            </summary>  
            <param name="s"></param>  
            <returns></returns>  
        </member>
        <member name="T:OracleSugar.DynamicJsonObject">
            <summary>
            动态JSON解析
            add dukang by 2016-05-19
            </summary>
        </member>
        <member name="M:OracleSugar.DynamicJsonObject.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            动态JSON解析
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:OracleSugar.DynamicJsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            TryGetMember
            </summary>
            <param name="binder"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.DynamicJsonConverter">
            <summary>
            动态JSON转换
            add dukang by 2016-05-19
            </summary>
        </member>
        <member name="M:OracleSugar.DynamicJsonConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            反序列化
            </summary>
            <param name="dictionary"></param>
            <param name="type"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.DynamicJsonConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
            <summary>
            序列化
            </summary>
            <param name="obj"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="P:OracleSugar.DynamicJsonConverter.SupportedTypes">
            <summary>
            支持的类型
            </summary>
        </member>
        <member name="T:OracleSugar.IsWhatExtensions">
            <summary>
            ** 描述：逻辑判段是什么？
            ** 创始时间：2015-5-29
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：http://www.cnblogs.com/sunkaixuan/p/4539654.html
            </summary>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsInRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            值在的范围？
            </summary>
            <param name="thisValue"></param>
            <param name="begin">大于等于begin</param>
            <param name="end">小于等于end</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsInRange(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            值在的范围？
            </summary>
            <param name="thisValue"></param>
            <param name="begin">大于等于begin</param>
            <param name="end">小于等于end</param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsIn``1(``0,``0[])">
            <summary>
            在里面吗?
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsContainsIn(System.String,System.String[])">
            <summary>
            在里面吗?
            </summary>
            <param name="thisValue"></param>
            <param name="inValues"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsNullOrEmpty(System.Object)">
            <summary>
            是null或""?
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsNullOrEmpty(System.Nullable{System.Guid})">
            <summary>
            是null或""?
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsNullOrEmpty(System.Guid)">
            <summary>
            是null或""?
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsValuable(System.Object)">
            <summary>
            有值?(与IsNullOrEmpty相反)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsValuable(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            有值?(与IsNullOrEmpty相反)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsZero(System.Object)">
            <summary>
            是零?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsInt(System.Object)">
            <summary>
            是INT?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsNoInt(System.Object)">
            <summary>
            不是INT?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsMoney(System.Object)">
            <summary>
            是金钱?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsGuid(System.Object)">
            <summary>
            是GUID?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsDate(System.Object)">
            <summary>
            是时间?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsEamil(System.Object)">
            <summary>
            是邮箱?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsMobile(System.Object)">
            <summary>
            是手机?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsTelephone(System.Object)">
            <summary>
            是座机?
            </summary>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsIDcard(System.Object)">
            <summary>
            是身份证?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsFax(System.Object)">
            <summary>
            是传真?
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsMatch(System.Object,System.String)">
            <summary>
            是适合正则匹配?
            </summary>
            <param name="thisValue"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsAnonymousType(System.Type)">
            <summary>
            是否是动态类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsCollectionsList(System.String)">
            <summary>
            是List类型
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsStringArray(System.String)">
            <summary>
            是string[]类型
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IsWhatExtensions.IsEnumerable(System.String)">
            <summary>
            是Enumerable
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.PubConvert">
            <summary>
            ** 描述：公用转换函数
            ** 创始时间：2015-6-9
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToInt(System.Object)">
            <summary>
            强转成int 如果失败返回 0
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToInt(System.Object,System.Int32)">
            <summary>
            强转成int 如果失败返回 errorValue
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToMoney(System.Object)">
            <summary>
            强转成money 如果失败返回 0
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToMoney(System.Object,System.Double)">
            <summary>
            强转成double 如果失败返回 errorValue
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToString(System.Object)">
            <summary>
            强转成string 如果失败返回 ""
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToString(System.Object,System.String)">
            <summary>
            强转成string 如果失败返回 str
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToDecimal(System.Object)">
            <summary>
            强转成Decimal 如果失败返回 0
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToDecimal(System.Object,System.Decimal)">
            <summary>
            强转成Decimal 如果失败返回 errorValue
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToDate(System.Object)">
            <summary>
            强转成DateTime 如果失败返回 DateTime.MinValue
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToDate(System.Object,System.DateTime)">
            <summary>
            强转成DateTime 如果失败返回 errorValue
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.PubConvert.ObjToBool(System.Object)">
            <summary>
            强转成Bool 如果失败返回 false
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.FileSugar">
            <summary>
            ** 描述：文件公共类
            ** 创始时间：2010-2-28
            ** 修改时间：-
            ** 修改人：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.FileSugar.GetFiePathAndCreateDirectoryByCode``1(System.String,``0,System.String)">
            <summary>
            根据文件目录、编号、文件名生成文件路径，并且创建文件存放目录
            格式为:/directory/code/filename
            </summary>
            <typeparam name="T"></typeparam>
            <param name="directory"></param>
            <param name="code"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.FileSugar.GetFiePathAndCreateDirectoryByDate``1(System.String,System.String)">
            <summary>
            根据文件目录、日期、文件名生成文件路径，并且创建文件存放目录
            格式为:/directory/2015/01/01/filename
            </summary>
            <typeparam name="T"></typeparam>
            <param name="directory"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.FileSugar.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:OracleSugar.FileSugar.GetMinPic(System.String,System.String,System.Int32)">
            <summary>
            获取缩略图片路径
            </summary>
            <param name="dir"></param>
            <param name="filename"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:OracleSugar.FileSugar.sync">
            <summary>
            同步标识
            </summary>
        </member>
        <member name="M:OracleSugar.FileSugar.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:OracleSugar.FileSugar.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.CreateFile(System.String)">
            <summary>
            创建一个文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:OracleSugar.FileSugar.CreateFile(System.String,System.String)">
            <summary>
            创建一个文件,并将字符串写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">字符串数据</param>
        </member>
        <member name="M:OracleSugar.FileSugar.CreateFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            创建一个文件,并将字符串写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">字符串数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:OracleSugar.FileSugar.OpenDirectory(System.String)">
            <summary>
            打开目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.OpenFile(System.String)">
            <summary>
            打开文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.GetDirectoryFromFilePath(System.String)">
            <summary>
            从文件绝对路径中获取目录路径
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileSizeByKB(System.String)">
            <summary>
            获取一个文件的长度,单位为KB
            </summary>
            <param name="filePath">文件的路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileSizeByMB(System.String)">
            <summary>
            获取一个文件的长度,单位为MB
            </summary>
            <param name="filePath">文件的路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:OracleSugar.FileSugar.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:OracleSugar.FileSugar.WriteText(System.String,System.String)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:OracleSugar.FileSugar.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
        </member>
        <member name="M:OracleSugar.FileSugar.CopyTo(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.MoveToDirectory(System.String,System.String)">
            <summary>
            将文件移动到指定目录( 剪切 )
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录，并指定新的文件名( 剪切并改名 )
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.StreamToBytes(System.IO.Stream)">
            <summary>
            将流读取到缓冲区中
            </summary>
            <param name="stream">原始流</param>
        </member>
        <member name="M:OracleSugar.FileSugar.FileToBytes(System.String)">
            <summary>
            将文件读取到缓冲区中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.FileToString(System.String)">
            <summary>
            将文件读取到字符串中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.FileToString(System.String,System.Text.Encoding)">
            <summary>
            将文件读取到字符串中
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:OracleSugar.FileSugar.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.DeleteFile(System.String)">
            <summary>
            删除指定文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:OracleSugar.FileSugar.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="strFilePath"></param>
            <param name="strValue"></param>
        </member>
        <member name="M:OracleSugar.FileSugar.WriteFile(System.String,System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="strFilePath"></param>
            <param name="strValue"></param>
            <param name="charset"></param>
        </member>
        <member name="M:OracleSugar.FileSugar.ShowWord(System.String)">
            <summary>
            在网页中显示WORD文档
            </summary>
        </member>
        <member name="M:OracleSugar.FileSugar.GetFileSream(System.String)">
            <summary>
            根据路径得到文件流
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.Check">
            <summary>
            ** 描述：验证失败，则抛出异常
            ** 创始时间：2015-7-19
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 修改人：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.Check.ArgumentNullException(System.Object,System.String)">
            <summary>
            使用导致此异常的参数的名称初始化 System.ArgumentNullException 类的新实例。
            </summary>
            <param name="checkObj"></param>
            <param name="message"></param>
        </member>
        <member name="M:OracleSugar.Check.Exception(System.Boolean,System.String,System.String[])">
            <summary>
            使用指定的错误消息初始化 System.Exception 类的新实例。
            </summary>
            <param name="isException">true则引发异常</param>
            <param name="message">错误信息</param>
            <param name="args">参数</param>
        </member>
        <member name="T:OracleSugar.LanguageHelper">
            <summary>
            ** 描述：多语言视图帮助类
            ** 创始时间：2016-8-7
            ** 修改时间：-
            ** 作者：孙凯旋
            ** 使用说明：
            </summary>
        </member>
        <member name="F:OracleSugar.LanguageHelper.PreSuffix">
            <summary>
            多语言视图的前缀
            </summary>
        </member>
        <member name="M:OracleSugar.LanguageHelper.GetLanguageViewNameList(OracleSugar.SqlSugarClient)">
            <summary>
            获取所有需要生成多语言的视图名称
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.LanguageHelper.UpdateView(OracleSugar.PubModel.Language,OracleSugar.SqlSugarClient)">
            <summary>
            创建多语言视图，带有LanguageId=1的所有有视图1替换成languageValue 并且新创视图 名称为 原有视图名+_$_+suffix
            </summary>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.IEnumerableExtensions">
            <summary>
            ** 描述：IEnumerable扩展类
            ** 创始时间：2015-6-9
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="sortField"></param>
            <param name="orderByType"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ThenBy``1(System.Linq.IOrderedEnumerable{``0},System.String,OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="sortField"></param>
            <param name="orderByType"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderByDataRow``1(System.Collections.Generic.IEnumerable{``0},System.String,OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="sortField"></param>
            <param name="orderByType"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ThenByDataRow``1(System.Linq.IOrderedEnumerable{``0},System.String,OracleSugar.OrderByType)">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="sortField"></param>
            <param name="orderByType"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ThenBy``1(System.Linq.IOrderedEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderByDataRow``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderByDataRow(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.Collections.Generic.List{OracleSugar.OrderByDictionary},OracleSugar.OrderByDictionary)">
            <summary>
            排序
            </summary>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <param name="orderByUnqueField"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ThenByDataRow``1(System.Linq.IOrderedEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderByReverse``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ThenByReverse``1(System.Linq.IOrderedEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.OrderByDataRowReverse``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ThenByDataRowReverse``1(System.Linq.IOrderedEnumerable{``0},System.Collections.Generic.List{OracleSugar.OrderByDictionary})">
            <summary>
            排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="orderByTypes"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.IEnumerableExtensions.ConvertField(System.Object)">
            <summary>
            解决GUID在SQL和C#中，排序方式不一致
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.CacheManager`1">
            <summary>
            ** 描述：缓存操作类
            ** 创始时间：2015-6-9
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：http://www.cnblogs.com/sunkaixuan/p/4563462.html
            </summary>
            <typeparam name="V">值类型</typeparam>
        </member>
        <member name="T:OracleSugar.IStorageObject`1">
            <summary>
            ** 描述：存储对象接口
            ** 创始时间：2015-5-29
            ** 修改时间：-
            ** 作者：sunkaixuan
            </summary>
        </member>
        <member name="M:OracleSugar.CacheManager`1.ContainsKey(System.String)">
            <summary>         
            验证key是否存在       
            </summary>         
            <param name="key">key</param>         
            <returns> /// 	存在<c>true</c> 不存在<c>false</c>.        /// /// </returns>         
        </member>
        <member name="M:OracleSugar.CacheManager`1.Get(System.String)">
            <summary>         
            根据key获取value  
            </summary>         
            <param name="key">key</param>         
            <returns></returns>         
        </member>
        <member name="M:OracleSugar.CacheManager`1.GetInstance">
            <summary>         
            获取实例 （单例模式）       
            </summary>         
            <returns></returns>         
        </member>
        <member name="M:OracleSugar.CacheManager`1.Add(System.String,`0)">
            <summary>         
            插入缓存(默认20分钟)        
            </summary>         
            <param name="key"> key</param>         
            <param name="value">value</param>          
        </member>
        <member name="M:OracleSugar.CacheManager`1.Add(System.String,`0,System.Int32)">
            <summary>         
            插入缓存        
            </summary>         
            <param name="key"> key</param>         
            <param name="value">value</param>         
            <param name="cacheDurationInSeconds">过期时间单位秒</param>         
        </member>
        <member name="M:OracleSugar.CacheManager`1.Remove(System.String)">
            <summary>         
            删除缓存         
            </summary>         
            <param name="key">key</param>         
        </member>
        <member name="M:OracleSugar.CacheManager`1.RemoveAll">
            <summary>
            清除所有缓存
            </summary>
        </member>
        <member name="M:OracleSugar.CacheManager`1.RemoveAll(System.Func{System.String,System.Boolean})">
            <summary>
            清除所有缓存
            </summary>
            <param name="removeExpression">表达式条件</param>
        </member>
        <member name="M:OracleSugar.CacheManager`1.GetAllKey">
            <summary>
            获取所有缓存key
            </summary>
            <returns></returns>
        </member>
        <member name="P:OracleSugar.CacheManager`1.Item(System.String)">
             <summary>         
            根据key获取value     
             </summary>         
             <value></value>      
        </member>
        <member name="T:OracleSugar.SqlSugarException">
            <summary>
            ** 描述：SqlSugar自定义异常
            ** 创始时间：2015-7-13
            ** 修改时间：-
            ** 作者：sunkaixuan
            ** 使用说明：
            </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarException.#ctor(System.String)">
            <summary>
            SqlSugar异常
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:OracleSugar.SqlSugarException.#ctor(System.String,System.String)">
            <summary>
            SqlSugar异常
            </summary>
            <param name="message">错误信息</param>
            <param name="sql">ORM生成的SQL</param>
        </member>
        <member name="M:OracleSugar.SqlSugarException.#ctor(System.String,System.String,System.Object)">
            <summary>
            SqlSugar异常
            </summary>
            <param name="message">错误信息</param>
            <param name="sql">ORM生成的SQL</param>
            <param name="pars">错误函数的参数</param>
        </member>
        <member name="M:OracleSugar.SqlSugarException.#ctor(System.String,System.Object)">
            <summary>
            SqlSugar异常
            </summary>
            <param name="message">错误信息</param>
            <param name="pars">错误函数的参数</param>
        </member>
        <member name="T:OracleSugar.SqlSugarToolExtensions">
            <summary>
             ** 描述：SqlSugar扩展工具类
             ** 创始时间：2015-7-19
             ** 修改时间：-
             ** 作者：sunkaixuan
             ** 使用说明：
             </summary>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.ToJoinSqlInVal``1(``0[])">
            <summary>
            将数组转换成Where In 需要的格式(例如:参数 new int{1,2,3} 反回 "'1','2','3'")
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.ToSqlValue(System.String)">
            <summary>
            将字符串转换成SQL参数所需要的格式(例如: 参数value返回'value')
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.ToSqlFilter(System.String)">
             <summary>
            SQL注入过滤
             </summary>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.ToSuperSqlFilter(System.String)">
            <summary>
             指定数据类型，如果不在指定类当中则引发异常(只允许输入指定字母、数字、下划线、时间、GUID)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.GetLockString(System.Boolean)">
            <summary>
            获取锁字符串
            </summary>
            <param name="isNoLock"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.GetSelectFiles(System.String)">
            <summary>
            获取Select需要的字段
            </summary>
            <param name="selectFileds"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.GetGroupBy(System.String)">
            <summary>
            
            </summary>
            <param name="groupByFileds"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.RequestParasToOracleParameters(Oracle.ManagedDataAccess.Client.OracleParameterCollection)">
            <summary>
            将Request里的参数转成OracleParameter[]
            </summary>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.GetTranslationSqlName(System.String)">
            <summary>
            获取转释后的表名和列名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.GetOracleParameterName(System.String)">
            <summary>
            获取参数名
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.SqlSugarToolExtensions.GetOracleParameterNameNoParSymbol(System.String)">
             <summary>
            获取没有符号的参数名称
             </summary>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="M:OracleSugar.CloudPubMethod.GetPageIndex(System.Int32,System.Double)">
            <summary>
            获取pageIndex
            </summary>
            <param name="pageIndex"></param>
            <param name="configCount"></param>
        </member>
        <member name="M:OracleSugar.CloudPubMethod.GetConnection(System.Collections.Generic.List{OracleSugar.CloudConnectionConfig})">
            <summary>
            根据rate获取随机Connection
            </summary>
            <param name="configList"></param>
        </member>
        <member name="M:OracleSugar.CloudPubMethod.TaskFactory``1(System.Func{System.Int32,``0},System.Threading.Tasks.Task{``0}[],System.Int32)">
            <summary>
            并行执行任务并且传入索引
            </summary>
            <param name="method">函数参数i</param>
            <param name="tasks">task数组</param>
            <param name="i">索引</param>
        </member>
        <member name="M:OracleSugar.CloudPubMethod.GetIsSmallPageIndex(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            分页索引是否很小
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="configCount"></param>
            <param name="maxHandleNumber"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.CloudPubMethod.GetIsSmallPageIndexByReverse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            倒数分页索引是否很小
            </summary>
            <param name="totalPage"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="configCount"></param>
            <param name="maxHandleNumber"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.TaskExtensions">
            <summary>
            Taskable扩展类
            </summary>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Count(OracleSugar.Taskable{System.Int32})">
            <summary>
            获取count
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Any(OracleSugar.Taskable{System.Int32})">
             <summary>
            是否存在这条记录
             </summary>
             <param name="thisValue"></param>
             <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Max``1(OracleSugar.Taskable{``0})">
            <summary>
            获取最大值 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Avg(OracleSugar.TaskableWithCount{System.Int32})">
            <summary>
            获取平均值
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Avg(OracleSugar.TaskableWithCount{System.Decimal})">
            <summary>
            获取平均值
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Avg(OracleSugar.TaskableWithCount{System.Double})">
            <summary>
            获取平均值
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.Min``1(OracleSugar.Taskable{``0})">
            <summary>
            获取最小值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.ToList``1(OracleSugar.Taskable{``0})">
            <summary>
            将Task中的结果集合并成List集成
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.ToSingle``1(OracleSugar.Taskable{``0})">
            <summary>
             返回序列中的唯一元素；如果该序列为空，此方法将引发异常；如果该序列包含多个元素，此方法将引发异常。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.ToSingleOrDefault``1(OracleSugar.Taskable{``0})">
            <summary>
             返回序列中的唯一元素；如果该序列为空，则返回默认值；如果该序列包含多个元素，此方法将引发异常。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.ToFirst``1(OracleSugar.Taskable{``0})">
            <summary>
            获取第一行数据,，如果序列中不包含任何元素,则会抛出异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.ToFirstOrDefault``1(OracleSugar.Taskable{``0})">
            <summary>
            如果序列中不包含任何元素，则返回默认值。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.MergeTable``1(OracleSugar.Taskable{``0})">
            <summary>
            将结果集合并到一个集合
            </summary>
            <typeparam name="DataTable"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.MergeEntities``1(OracleSugar.Taskable{``0})">
            <summary>
            将结果集合并到一个集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:OracleSugar.TaskExtensions.MergeValue``1(OracleSugar.Taskable{``0})">
            <summary>
            将结果集合并到一个集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="T:OracleSugar.CloudConnectionConfig">
            <summary>
            云计算连接配置
            </summary>
        </member>
        <member name="P:OracleSugar.CloudConnectionConfig.Rate">
            <summary>
            处理机率,值越大机率越高
            </summary>
        </member>
        <member name="P:OracleSugar.CloudConnectionConfig.ConnectionString">
            <summary>
            链接字符串名称
            </summary>
        </member>
        <member name="T:OracleSugar.CloudSearchResult`1">
            <summary>
            云搜索Task反回类
            </summary>
        </member>
        <member name="P:OracleSugar.CloudSearchResult`1.Entities">
            <summary>
            集合
            </summary>
        </member>
        <member name="P:OracleSugar.CloudSearchResult`1.Value">
            <summary>
            单个对象
            </summary>
        </member>
        <member name="P:OracleSugar.CloudSearchResult`1.DataTable">
            <summary>
            DataTable
            </summary>
        </member>
        <member name="P:OracleSugar.CloudSearchResult`1.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:OracleSugar.CloudSearchResult`1.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:OracleSugar.Taskable`1">
            <summary>
            云计扩展类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:OracleSugar.Taskable`1.Tasks">
            <summary>
            任务
            </summary>
        </member>
        <member name="P:OracleSugar.Taskable`1.Sql">
            <summary>
            sql
            </summary>
        </member>
        <member name="P:OracleSugar.Taskable`1.WhereObj">
            <summary>
            数据库参数(例如:new{id=1,name="张三"})
            </summary>
        </member>
        <member name="T:OracleSugar.TaskableWithCount`1">
            <summary>
            云计扩展类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:OracleSugar.TaskableWithCount`1.Tasks">
            <summary>
            任务
            </summary>
        </member>
        <member name="P:OracleSugar.TaskableWithCount`1.Sql">
            <summary>
            sql
            </summary>
        </member>
        <member name="P:OracleSugar.TaskableWithCount`1.WhereObj">
            <summary>
            数据库参数(例如:new{id=1,name="张三"})
            </summary>
        </member>
        <member name="T:OracleSugar.OrderByDictionary">
            <summary>
            字典排序类
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.OrderByField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.OrderByType">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.OrderByString">
            <summary>
            排序字符串
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.OrderByStringReverse">
            <summary>
            排序字符返转
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.OrderByTypeReverse">
            <summary>
            排序字符返转
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.IsAsc">
            <summary>
            是升序
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.Symbol">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:OracleSugar.OrderByDictionary.SymbolReverse">
            <summary>
            比较符反转
            </summary>
        </member>
    </members>
</doc>
